apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
    name: concourse-repo
    namespace: concourse
spec:
    interval: 5m0s
    url: https://concourse-charts.storage.googleapis.com
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault:
        - vault_address: https://knox.improwised.dev
          engine_path: sops
          key_name: musketeers_encryption_key
          created_at: "2023-09-12T12:23:50Z"
          enc: vault:v1:PHW7Pl91z7ncWHETGYW75ii5nk+FEIx3+qvHy6g6+agr7o7xUkWAM7CBp+endid07frPKGsfRfH/PrGOmwRetx7niO7EFZf0QyTrbjtTPACIqWjlabpSb789AAKAWspMHE8/BTPIet74766IF2NfywYQqvDhUIW894g7DLEpvR2/us8P7zTuzGDWWbZcTy1bb6oqq6kqgw0bv/GKb+zNzPSGxvm65RjI7E5CQPVg9o5U+i4tDhQ4QM3qVxlVOciGY2vFiUC4X+vM2mndMzE5PF/mzh1GtWrjoAwqB7YgAY6BDYbLmbOnkNKYv1PKm5FtqQ0YWH5Gy2MY+9D+3yqEXOTE2H+yITYbAUCPUxd+yTPxckPibveSR0tFj505j+yQ2TkRwZ35WUJtp+NzbhfA+lNIBVOWl3bRa50rv1XjI6Xt5WPySpzq3cZXtUpkyR5zuhfX0VIhmJdbekWnq9smF4ZbD/DOkbE/ihlwywMs/e6APEFYFeYm1XwI71/EIJfoHQdk1lXkBkGT0HYc9bxtj3/MKxQ1HlLF8zVf5CF9wv6hV47wQyKq9RC58Tj98Y/GulSRwGjjlDgCgIfzjm9pJnPIpP1wUf2B2mSKaLqV9CuzBI0w4jbM+toTacXBqb9BPcam6lQswgveMmJ+6SaUr8IC4DW8x241nsPHDl+0zJw=
    age: []
    lastmodified: "2023-09-12T12:23:51Z"
    mac: ENC[AES256_GCM,data:mExHcnNB7CXJ7W4uWFGygEriRBnyPaVWNDaq0NZP1+25EqvE1saHxGnlbZmDXYWrCcF6atL2CAfA1Ru3eW99vdGLhIUoi92ZIfHiWR+zUpcY5JXqY5sQV4QEgIv7V37/TdcMDMUk6aoQ2uO4KWnDd5OThHgQcC0mFvUMx5K1exM=,iv:HsLAaG6hxe83M/N4xwSXM8kvHiBNa6LzXbz4JZWMbZo=,tag:gseF427/3JMMgyKZW3aE2A==,type:str]
    pgp: []
    encrypted_regex: ^(hostKey|hostKeyPub|sessionSigningKey|workerKey|workerKeyPub|postgresUser|postgresPassword|githubClientId|githubClientSecret)$
    version: 3.8.0-rc.1
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
    name: concourse
    namespace: concourse
spec:
    install:
        remediation:
            retries: 3
    upgrade:
        remediation:
            retries: 3
    releaseName: concourse
    interval: 10m
    chart:
        spec:
            chart: concourse
            version: 17.1.1
            sourceRef:
                kind: HelmRepository
                name: concourse-repo
                namespace: concourse
    values:
        fullnameOverride: concourse
        #image: concourse/concourse
        #imageTag: "7.4.0"
        #imagePullSecrets: []
        ## Configuration values for the Concourse application (worker and web components).
        ## The values specified here are almost direct references to the flags under the
        ## `concourse web` and `concourse worker` commands.
        ##
        concourse:
            web:
                ## A name for this Concourse cluster, to be displayed on the dashboard page.
                ##
                clusterName: improwised
                ## Enable automatic rerunning of builds when worker disappears.
                ##
                enableBuildRerunWhenWorkerDisappears: true
                ## Enable the experimental across step to be used in jobs. The API is subject to change.
                ##
                enableAcrossStep: true
                ## Enable the creation of instanced pipelines.
                ##
                enablePipelineInstances: true
                ## Enable P2P volume streaming between all wokrers.
                ## By default all volume streming goes through the web nodes.
                ##
                enablep2pVolumeStreaming: false
                ## Enable auditing for all api requests connected to system transactions.
                ##
                enableSystemAuditing: true
                ## Enable auditing for all api requests connected to teams.
                ##
                enableTeamAuditing: true
                ## Enable auditing for all api requests connected to workers.
                ##
                enableWorkerAuditing: true
                ## Enable redacting secrets in build logs.
                ##
                enableRedactSecrets: true
                ## Minimum level of logs to see. Possible options: debug, info, error.
                ##
                logLevel: info
                ## IP address on which to listen for HTTP traffic (web UI and API).
                ##
                bindIp: 0.0.0.0
                ## Port on which to listen for HTTP traffic (web UI and API).
                ##
                bindPort: 8080
                ## URL used to reach any ATC from the outside world.
                ## This is *very* important for a proper authentication workflow as
                ## browser redirects are based on the value set here.
                ##
                ## Example: http://ci.concourse-ci.org
                ##
                externalUrl: https://ci.pride.improwised.dev
                localAuth:
                    enabled: false
                ## Time limit on P2P volume streaming
                ##
                p2pVolumeStreamingTimeout: 1m
                ## Enable web UI and API endpoint for resource causality.
                ##
                enableResourceCausality: true
                ## Instead of specifying a single placement strategy, configure a chain of
                ## them to be applied in order.
                ##
                ## If set, takes priority over containerPlacementStrategy.
                ##
                ## Possible values: volume-locality | fewest-build-containers | limit-active-tasks | limit-active-containers | limit-active-volumes
                containerPlacementStrategies:
                    - fewest-build-containers
                    - volume-locality
                ## How long to wait for requests to Garden to complete. 0 means no timeout.
                ##
                gardenRequestTimeout: 30s
                ## Default days to retain build logs. 0 means unlimited.
                ##
                defaultDaysToRetainBuildLogs: 30
                ## Maximum days to retain build logs, 0 means not specified. Will override values configured in jobs.
                ##
                maxDaysToRetainBuildLogs: 90
                postgres:
                    host: postgres-postgresql.concourse
                    port: 5432
                    connectTimeout: 5m
                    database: concourse
                kubernetes:
                    enabled: false
                ## Emit metrics to logs instead of an actual metrics system.
                ## TODO: Rakshit's override. Temporary until we get Prometheus working
                emitToLogs: false
                prometheus:
                    enabled: false
                    ## IP to listen on to expose Prometheus metrics.
                    ##
                    bindIp: 0.0.0.0
                    ## Port to listen on to expose Prometheus metrics.
                    ##
                    bindPort: 9391
                    ## If Prometheus operator is used, also create a servicemonitor object
                    serviceMonitor:
                        enabled: false
                        interval: 30s
                        # Namespace the servicemonitor object should be in
                        namespace: monitoring
                        ## Additional Labels to be added to the servicemonitor.
                        ##
                        ##
                        ## Example:
                        ##   key1: "value1"
                        ##   key2: "value2"
                        ##
                        ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                        labels: {}
                        ## Relabel Metrics
                        ## https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs
                        ## Example that consolidates duplicate metrics when web is running in HA:
                        ## metricRelabelings:
                        ##   - regex: 'instance'
                        ##     action: labeldrop
                        ##   - regex: 'pod'
                        ##     action: labeldrop
                        # metricRelabelings:
                # # TODO: Implement OPA in future
                # opa:
                #   ## Open Policy Agent policy check endpoint.
                #   ##
                #   ## Example: https://opa.example.com:8181/v1/data/concourse/allow
                #   ##
                #   url:
                #   ## Open Policy Agent API request timeout, in Go duration format.
                #   ##
                #   ## Example: 5s for 5 seconds
                #   ##
                #   timeout:
                # policyCheck:
                #   ## Array of HTTP methods to filter through policy checking.
                #   ##
                #   ## Example: ["PUT", "POST"]
                #   ##
                #   filterHttpMethods:
                #   ## Array of ATC API actions to filter through policy checking.
                #   ##
                #   ## Example: ["SaveConfig", "UseImage"]
                #   ##
                #   filterActions:
                #   ## Array of ATC API actions to skip policy checking.
                #   ##
                #   ## Example: ["PausePipeline", "UnpausePipeline"]
                #   ##
                #   skipActions:
                auth:
                    cookieSecure: true
                    mainTeam:
                        #   ## Configuration file for specifying the main teams params.
                        #   ## Ref: https://concourse-ci.org/managing-teams.html#setting-roles
                        #   ## Example:
                        #   ## config: |
                        #   ##   roles:
                        #   ##   - name: owner
                        #   ##     local:
                        #   ##       users: ["admin"]
                        #   ##   - name: member
                        #   ##     local:
                        #   ##       users: ["test"]
                        #   ##
                        config: |
                            roles:
                            - name: owner
                              github:
                                users: ["deltasquare4"]
                            - name: member
                              github:
                                users: ["aniketgohelimp"]
                        #   ## Authentication (Main Team) (GitHub)
                        #   ##
                        github:
                            #     ## Comma-separated allow list of GitHub teams.
                            #     ##
                            team: improwised/infrastructure
                    # ## Authentication (GitHub)
                    # ##
                    github:
                        enabled: true
            worker:
                ## Signal to send to the worker container when shutting down.
                ## Possible values:
                ##
                ## - SIGUSR1: land the worker, and
                ## - SIGUSR2: retire the worker.
                ##
                ## Note.: using SIGUSR2 with persistence enabled implies the use of an
                ## initContainer that removes any data the existed previously under
                ## `concourse.worker.workDir` as the action of `retire`ing a worker implies
                ## that no state comes back with it when re-registering.
                ##
                ## Ref: https://concourse-ci.org/concourse-worker.html
                ## Ref: https://concourse-ci.org/worker-internals.html
                ##
                shutdownSignal: SIGUSR2
                containerd:
                    allowHostAccess: true
                    dnsProxyEnable: true
                    dnsServers:
                        - 8.8.8.8
                ## Runtime to use with the worker. Possible values: guardian, containerd, houdini.
                ## Please note that Houdini is insecure and doesn't run 'tasks' in containers.
                runtime: containerd
                baggageclaim:
                    ## Driver to use for managing volumes.
                    ## Possible values: detect, naive, btrfs, and overlay.
                    ##
                    driver: naive
        ## Configuration values for Concourse Web components.
        ## For more information regarding the characteristics of
        ## Concourse Web nodes, see https://concourse-ci.org/concourse-web.html.
        ##
        web:
            service:
                api:
                    type: ClusterIP
            replicas: 1
            resources:
                requests:
                    cpu: 100m
                    memory: 150Mi
                limits:
                    cpu: 250m
                    memory: 300Mi
            ingress:
                enabled: true
                ingressClassName: traefik
                annotations: null
                # kubernetes.io/ingress.class: traefik
                # kubernetes.io/tls-acme: "true"
                # cert-manager.io/cluster-issuer: letsencrypt-prod
                hosts:
                    - ci.pride.improwised.dev
                # tls:
                #   - secretName: concourse-web-tls # pragma: allowlist secret
                #     hosts:
                #       - ci.pride.improwised.com
        ## Configuration values for Concourse Worker components.
        ## For more information regarding the characteristics of
        ## Concourse Workers, see https://concourse-ci.org/concourse-worker.html
        ##
        worker:
            enabled: true
            kind: StatefulSet
            replicas: 1
            resources:
                requests:
                    cpu: 200m
                    memory: 1000Mi
                limits:
                    cpu: 500m
                    memory: 1000Mi
            hardAntiAffinity: true
            hardAntiAffinityLabels:
                application: concourse
        persistence:
            enabled: false
            worker:
                storageClass: longhorn
                accessMode: ReadWriteOnce
                size: 180Gi
        postgresql:
            enabled: true
        secrets:
            ## Create the secret resource from the following values. Set this to
            ## false to manage these secrets outside Helm.
            ##
            create: true
            ## Annotations to be added to the secrets.
            ##
            ## Example:
            ##   key1: "value1"
            ##   key2: "value2"
            ##
            ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
            ##
            annotations: {}
            ## Array of team names and public keys for team external workers. A single
            ## team can have many keys defined in the key field.
            ##
            ## Example:
            ## - team: main
            ##   key: |-
            ##     ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDYBQ9fG6IML+qsFaMh1Pl+81wyUwRilHdfhItAiAsLVQsOwI5+V4pn5aLhHPBuRQqIqYmbkZ7I1VUIN1+90PVJ3X7l9qqanb85AHMtLujw1j9u0zDyH2XHgpUloknUQzUSLIZjjU3Hn3Uo/XikF+vT8104isO7Ym8Xp7sIcRuvOQ3nuRsFVCRogxpLTVHD/k57rwYVqWWLaKLwvx01ZVXOq4GHk/BVaKa9ODC/dNgbZMfwvVVXuf7/NFGmSMyXb49Si4aoP4Gn7jAX6GngBbm/bgKqO0skQy/ggQm/YVF+s5q4EhleMBLVJKD1VpM5LeLDFpiu/y4bVd8wUcgK+QQ9 Concourse
            ##     ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDzpK/sIOtL9SCjAWrvO8QvknzYbnXvP/BljTQFNLwzsPqawqTk3FqUIsEjsq4clV3nwADK8Iq9A/xRlPR+ANhoGDPDv34FsWz5qKcXV7aXcOma8vyU4MJPjveXcZX7FjwztGoRIND9CXlLCDuYeIwBxCcnBBAwQFZuCmEXcqwsRbCve1KkswV1yr9yvmNaKNKTkJGo+7wGyShjzkfqijYCdwYbUWpSB0/tOGszBONtKE6FyJUmVtBgj+CAGZtj1AxGBbMnxxV
            ##
            ## Make sure to chack the security caveats here: https://concourse-ci.org/teams-caveats.html
            ## Extra Reads: https://github.com/concourse/concourse/issues/1865#issuecomment-464166994
            ## https://concourse-ci.org/global-resources.html#complications-with-reusing-containers
            ##
            # teamAuthorizedKeys:
            ## List of `username:password` or `username:bcrypted_password` combinations for all your local concourse users.
            ## For details of expected format, see https://concourse-ci.org/local-auth.html
            ##
            localUsers: test:test
            # ## The TLS certificate and private key for the web component to be able to terminate
            # ## TLS connections.
            # ##
            # webTlsCert:
            # webTlsKey:
            # ## The TLS CA certificate for the web component to be able to terminate
            # ## TLS connections. Enables mTLS.
            # ##
            # webTlsCaCert:
            ## Concourse Host Keys.
            ## Ref: https://concourse-ci.org/install.html#generating-keys
            ##
            # pragma: allowlist secret
            hostKey: ENC[AES256_GCM,data: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,iv:mTVKMcO3mVTrgiI+HY1qSkg2jzu11A553Ln9JMdca34=,tag:ou0lF7uD6nnjaSbRe1FKHw==,type:str]
            hostKeyPub: ENC[AES256_GCM,data:fYuuW8z406+mT1y2kYEcs+3B9lpNe7RgX4Q5chUFQL6dcaeAXLIyUeSQ1zoS33MXUTyryRVD3mCUiNbf9VgDvdQ3x9DIDXJkJ2vGTAoCzIB8t92g96mypFIVBRr42GbdrPx/hpbxUhH/rd8JJhm4bUtCnIaN680e49T0ES9zAGlAwx/lTqb33mv0i/g24KbwHbkR4ZtITnDL+c530FnabAUtbCPH6tJ3jZ3USbXs8gQDqrb7xJsjJe9q4bSRbmneRVvh6LQR3ag/0dl3u/tDsWUuR1XcI82Xa2p2o8f/PXdA23EixeZTrYMjcRbR1LQWQFgE06Ig0tHgwKUJ1JJ9fKqJTGc3HAuPFK9ecBqU1v0PmMq9UDoCEMXsBlhO4FLn11ABw1YJh+t9CTWd+NR+ni0kOEsHvABTlVSjk3NYhuAbQgcKiK+ZKFsPQWuXmWQubGOrFj09AhLH2OhrKzagDmK0IsCPK7Xz9EX935MgIDOUGDffAoJZjs91kMA8B3Vi2IpG3v4qAA/FyKxECxqEW7I0ffmP7XaYzvFaHkHSeuTuMNbFuKk8KGxkPrHq/BVDkFPHIvzzlzKK2VqTHVLp/q7+U2rYmUN1ET8jxcpX8IjKWXLfbB4CFTRcu7kUj/eZwjExG8EBZXeNPOarO19ZhgeJeyAzgfDDYXJEy7K9AoSWY3upWLmpf08RVFZZuKdkkc6q1He+7h/jwFyt89s/Avb9zLV4Dqv4EEalM70haRnrJsbrx3xuHxN169/cSdGzGMAstQaxbeykMoJizGD8GaR7NkIvIfDJKSFkpomZQ1YDgpVAIEN8Zp5wQDn2bn+1Ysj1a1DjEhS8+AldI9KcjWKHvh+6vKi280ACb9nznwRdlLqouxBWJv0n9FPXaYp+w4htmfY46j00mT4QYThdBREdou2HKAQozir6PcseF7UVomXEZpl4g2XIUVwwJ3qxrJdTaw==,iv:L+dcd+okP02ZbyJrv2xfEdZeoQ2DmA4gNWKmkg+97xY=,tag:h2ebwgShQ5Xguu9oKbck+w==,type:str]
            ## Concourse Session Signing Keys.
            ## Ref: https://concourse-ci.org/install.html#generating-keys
            ##
            # pragma: allowlist secret
            sessionSigningKey: ENC[AES256_GCM,data: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,iv:spqVxjWCKiwYpNPUeYXXw1NSfulJhzDJJNAXplcP+mg=,tag:gx69oSogOjoYrX6fD/fLqQ==,type:str]
            ## Concourse Worker Keys.
            ## Ref: https://concourse-ci.org/install.html#generating-keys
            ##
            # pragma: allowlist secret
            workerKey: ENC[AES256_GCM,data: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,iv:QYO3vx/k8zvV7986jEdanDQFeDjUklcDrq2FrI/9Uag=,tag:t8qQeg6bAXlahjT6EFWkcw==,type:str]
            workerKeyPub: ENC[AES256_GCM,data:o7Gy1fcHAScMQiVzg2pwurlMB1RCT1Xj75BDp4+CS2zy15VPf6W9iiI5vULnsvxPsvQM/Zwt2vQNQhM5TND4Yp6RUHgSDcndelQahs8qqQkX+lvoTnSpmT9jMCdDkxksFbZL1Q9e8v2/H7dBa6AwxURGlQRdeTFiiBwFpCI0qlJ+ZK49ey+41XxrHrrdoxqd4jmlenAPmwinVSbxfFq21ZNcKqyr40ccQeHfs+nFSPqjWO9Q532eQCM/BYdJ7B/sS8i22SRao0PMBtgQqKR/N1mVuf1lG0s4KuK+k/azrmHMDNo86a1/XmRM5FuTS1hVMUjGcxtdEZP0uegjhKFGJpnysMluY7FBjbRxh1QpY8XYJvjttl5gvU/T8Whp3x8Uxm3yV0ciDQVML3plRyXk6kq8uC+i+YO4SrHH9jdCU7nFvAUUAOCw7tc9F2p+iHdF7yXTBOB16xf9GGuLEc7noFCH5eQ62TwH0XOoaBbsPcSPq94MEyMGgmSzuqJ4tTBjjHFGECkDLjChFxW17pXZAx6DqSAVYBLBa4vTnXULvrBtwPC+hEcZY/h5CJphymJKfpadvomJJXDenWdX6s5UQEi2JiPXC9JhfYeJwDJ+I0s2YO58BxqFnD3nwT0MZQHV2W7ehuYagVTkASkkas/EgvD0CDZ918C6CorS9Ipj9tXl0SAMeGJzc2ZT0b3A+TBQS4E7Y8I08LuhrOu69aVSjlh4c6aR5MNtAfjYYydnNEBoZ3bGwRvgRMsqyju6iXHQX+iIpKpuny3BpykqgESc8q75F7c07I63EMUJJX+AQDYa9guckCYGCkIYuJNwfQWb/fRCtELkpHbVj02auN1a575mBbeJ65qPlYwDKxLK5G2Ws+D/Dbgnm17AOPTuRyzUXv9ept+tvspioV8Uv42kNm5TRDJJDJjYFq5sTOczBlzMr6F+aNM/68xCvLwHCIRO5PJ4BQ==,iv:fAYtZZyxSUc1BBAdy70MrRjnvaLPjn/tw7rBbxFwh0s=,tag:xeyEDiojRdI2Mhd7YnUZ7g==,type:str]
            postgresUser: ENC[AES256_GCM,data:zjV/ZMO8kaa9,iv:R/97lnF6UizS938Pu6LuVk2B0EJpETxzSqQ3zMDklOE=,tag:cOWzmnbWQMlStSkW5B7RQw==,type:str]
            # pragma: allowlist secret
            postgresPassword: ENC[AES256_GCM,data:v6Bl2YjNGn+r3yEXsqDYkw==,iv:KuVL5a7GuJF4SzJc25LeTm1T4r5yj3hGLPtkoDgxPtA=,tag:2qudk5aMpBHDNE0O8ZBK6w==,type:str]
            # postgresCaCert:
            ## Secrets for GitHub OAuth.
            ##
            githubClientId: ENC[AES256_GCM,data:roBZ3lAqRu7iNURRVG5Gh0P5X4w=,iv:JuxfSvG75LCkdmL3aLG+mZCXlyUbcq9P36a1dnatvBg=,tag:2M2wZnRbtfkbYXj7GL7etw==,type:str]
            # pragma: allowlist secret
            githubClientSecret: ENC[AES256_GCM,data:ePerXLMLGE+u7IsdrSzh0Xsnad4/AQjaWRB8RA/oq0cXg5oy+MxnCg==,iv:JRHNK+jYH1o6o5Yzk5eDQvyD0MkZYkLaOPNZa8d0tnA=,tag:n9sRruDCT9Vl6P05cERbhw==,type:str]
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault:
        - vault_address: https://knox.improwised.dev
          engine_path: sops
          key_name: musketeers_encryption_key
          created_at: "2023-09-12T12:23:50Z"
          enc: vault:v1:PHW7Pl91z7ncWHETGYW75ii5nk+FEIx3+qvHy6g6+agr7o7xUkWAM7CBp+endid07frPKGsfRfH/PrGOmwRetx7niO7EFZf0QyTrbjtTPACIqWjlabpSb789AAKAWspMHE8/BTPIet74766IF2NfywYQqvDhUIW894g7DLEpvR2/us8P7zTuzGDWWbZcTy1bb6oqq6kqgw0bv/GKb+zNzPSGxvm65RjI7E5CQPVg9o5U+i4tDhQ4QM3qVxlVOciGY2vFiUC4X+vM2mndMzE5PF/mzh1GtWrjoAwqB7YgAY6BDYbLmbOnkNKYv1PKm5FtqQ0YWH5Gy2MY+9D+3yqEXOTE2H+yITYbAUCPUxd+yTPxckPibveSR0tFj505j+yQ2TkRwZ35WUJtp+NzbhfA+lNIBVOWl3bRa50rv1XjI6Xt5WPySpzq3cZXtUpkyR5zuhfX0VIhmJdbekWnq9smF4ZbD/DOkbE/ihlwywMs/e6APEFYFeYm1XwI71/EIJfoHQdk1lXkBkGT0HYc9bxtj3/MKxQ1HlLF8zVf5CF9wv6hV47wQyKq9RC58Tj98Y/GulSRwGjjlDgCgIfzjm9pJnPIpP1wUf2B2mSKaLqV9CuzBI0w4jbM+toTacXBqb9BPcam6lQswgveMmJ+6SaUr8IC4DW8x241nsPHDl+0zJw=
    age: []
    lastmodified: "2023-09-12T12:23:51Z"
    mac: ENC[AES256_GCM,data:mExHcnNB7CXJ7W4uWFGygEriRBnyPaVWNDaq0NZP1+25EqvE1saHxGnlbZmDXYWrCcF6atL2CAfA1Ru3eW99vdGLhIUoi92ZIfHiWR+zUpcY5JXqY5sQV4QEgIv7V37/TdcMDMUk6aoQ2uO4KWnDd5OThHgQcC0mFvUMx5K1exM=,iv:HsLAaG6hxe83M/N4xwSXM8kvHiBNa6LzXbz4JZWMbZo=,tag:gseF427/3JMMgyKZW3aE2A==,type:str]
    pgp: []
    encrypted_regex: ^(hostKey|hostKeyPub|sessionSigningKey|workerKey|workerKeyPub|postgresUser|postgresPassword|githubClientId|githubClientSecret)$
    version: 3.8.0-rc.1
