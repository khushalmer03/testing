name: Actions Runner Controller Demo
on:
  push
jobs:
  Explore-GitHub-Actions:
    # You need to use the INSTALLATION_NAME from the previous step
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: /
          file: release.yaml # optional: provide the path for resource to be scanned. This will override the directory if both are provided.
          quiet: false # optional: display only failed checks
          soft_fail: true # optional: do not return an error code if there are failed checks
          framework: kubernetes # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          # skip_framework: terraform # optional: skip a specific infrastructure {cloudformation,terraform,kubernetes,all}
          # skip_cve_package: CVE_2019_8331 # optional: skip a specific CVE package in SCA scans, can be comma separated list
          output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          output_file_path: reports/results.sarif # folder and name of results file
          # output_bc_ids: true # optional: output Bridgecrew platform IDs instead of checkov IDs
          # download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
          # repo_root_for_plan_enrichment: example/ #optional: Directory containing the hcl code used to generate a given terraform plan file. Use together with `file`
          # var_file: ./testdir/gocd.yaml # optional: variable files to load in addition to the default files. Currently only supported for source Terraform and Helm chart scans.
          # log_level: DEBUG # optional: set log level. Default WARNING
          # config_file: path/this_file
          # baseline: cloudformation/.checkov.baseline # optional: Path to a generated baseline file. Will only report results not in the baseline.
          # container_user: 1000 # optional: Define what UID and / or what GID to run the container under to prevent permission issues
          # use_enforcement_rules: true
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: reports/results.sarif
